/* You MUST
1. Have "Native Windows" disabled
2. customize address bar to: flexible space, address bar, flexible space
3. customize status bar to: status info (only this)
4. customize the tab bar at the top to: flexible space, back, forward, reload. (the flex space is the crucial part here)
*/

/* Arcify by adding padding to browser */
#browser {
	padding-top: 8px !important;
	padding-right: 8px !important;
	padding-bottom: 8px !important;
	padding-left: 0 !important;
}

/* Arcify by adding border radius and uniform inset shadow to main content container */
#webpage-stack {
	border-radius: 6px;
	box-shadow: inset 0 0 12px 0 rgba(0, 0, 0, 0.16);
	/* Use backdrop-filter to increase saturation of content behind this element */
	backdrop-filter: saturate(0.5);
	-webkit-backdrop-filter: saturate(0.5);
}

.tabbar-wrapper {
	background: transparent !important;

	.tabbar-wrapper {
		background: transparent !important;
	}

	#tabs-tabbar-container {
		padding-top: 0 !important;
		padding-bottom: 0 !important;
		padding-left: 5px !important;
		padding-right: 5px !important;
		background: transparent !important;
		box-shadow: none !important;
	}

	#tabs-container {
		background: transparent !important;
	}
}

/* Make header overlay at the very top, not affecting layout */
#browser #header {
	/* position inside of the container gutter*/
	position: absolute !important;
	top: 0;
	left: 0;
	right: 0;
	height: 20px !important;
	background: transparent !important;
	border: 0 !important;
	box-shadow: none !important;
	* {
		color: transparent !important; /* avoid text rendering */
	}
}

/* Arcify by collapsing mainbar height and remove padding/borders so it doesn't push UI */
.mainbar {
	overflow: visible !important; /* let children escape */

	/* position inside of the container gutter*/
	position: absolute !important;
	left: 0;
	right: 0;

	/* make resize area reasonably big and extend into the border of the browser */
	top: -10px;
	height: 20px !important;

	/* make invisible */
	border: 0 !important;
	background: transparent !important;

	/* let pointer events pass through (for forward/back/reload buttons) */
	pointer-events: none !important;

	.UrlBar-AddressField {
		opacity: 0;
		transition: opacity 120ms ease;
		max-width: 500px;
		margin-top: calc(30% + 40px);
		transform: scale(1.25) !important;

		&:not(:has(.UrlField:focus-within, #urlFieldInput:focus)) {
			pointer-events: none !important;
		}

		&:has(.UrlField:focus-within, #urlFieldInput:focus) {
			opacity: 1;
			pointer-events: auto;
		}

		.OmniDropdown {
			box-shadow: 0 0 40px 10px var(--colorHighlightBg, #fff4) !important;
		}
	}

	.toolbar-mainbar {
		transform: translateY(-40px);
	}
}

#browser.win .mainbar {
	.window-buttongroup {
		position: absolute;
		top: 50px;
		left: clamp(32px, 6vw, 120px);
		min-height: 0 !important;
		pointer-events: none !important;
		button {
			width: 25px !important;
			height: 25px !important;
			pointer-events: auto;
		}
	}

	button.vivaldi {
		display: none;
	}
}

#footer {
	background: transparent !important;
	position: absolute !important;
	bottom: -2px;
	border: 0 !important;

	/* Highlight status text when present */
	.UrlFragments {
		background-color: var(--colorBg);
		padding: 2px 4px;
		border-radius: 3px;
		box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
		/* Only show when there's meaningful content */
		opacity: 0;
		transition: opacity 0.2s ease;
	}

	/* Show highlight when there's actual URL content */
	.UrlFragments:not(:empty):has(.UrlFragment-LinkWrapper) {
		opacity: 1;
	}
}
